HTML
-opening and closing tags (<h1> </h1>) (h1-h6)

<p> - preferred element for normal-sized paragraph text

<!--""""--> - Comments

style - way to change elements characteristics...

'color:' - is what controls text color

'font-size:' - 

'font-family:' - 

ex> <h2 style="color:blue">CatPhotoApp</h2>

W/ CSS properties, hundreds of props that you can change...

Can create a <style></style> at top of code and can create CSS selector for all elements w/ specific tag

Ex> 

<style>
	h2 {color:red;}
	.example-text {color:red;}
</style>

CSS Class to style an element (reusable styles that can be added to HTML elements.)

Class designation = .example-text {color: blue;}

then use as...

<h2 class="example-text">CatPhotoApp</h2>

Can import font from Google...(need to link @ top of main.html or CSS docs)
-Then  either add to class, element, etc in style section...

Several fonts avail in all browsers:
(Monospace, Serif, Sans-Serif)

In styling, you can add instructions on how to fonts should depreciate by seperating them by a ',' before the ';'...

Can add Images to your Website....
-Do w/ 'img' element and point to 'src'

Ex>

<img src="https://www.your-image-source.com/your-image.jpg" alt="text about what your image is.">

-all img elements must have an 'alt' attribute which is used for screen readers to improve accessibility and is displaying if the image fails to load

CSS w/ a property 'width' (defined w/ 'px')
	-Used w/ images...

CSS borders (border-style, border-color, border-width, border-radius)
	-can define border-radius w/ px or %

Link to external pages w/ Anchor Elements

Ex>
<p>Normal text<a href='...link to external page...'>the links text</a>remainder of normal text</p>

Can do the same thing w/ images by wrapping them in <a> tags...

Bulleted Unorder/Ordered Lists

<ul> = Unordered list

<ol> = Ordered list

<li> = list items

Creating a Web Form (inc. place holder)

<input type="text" placeholder="this is placeholder text">

-Note: input elements are self-closing

Can build web froms that sub data to server w/ pure html...

<form action="/url-where-you-want-to-submit-form-data"></form>
	-wrap this around next text fields w/in

Adding a Submit Button
-clicking will send the data from your form to the URL specified in 'action' tag
-inc. inside the form tags

<button type="submit">this button submits the form</button>


Use HTML5 to Require a field
-can make a field required...

<input type="text" required>

Create Radio Buttons
-type of input
-each of btns should be nested w/in 'label' element
-all related shoud have same 'name' attrib

<label><input type="radio" name="indoor-outdoor">Indoor</label>

Create Check Boxes
-type of input
-for ?s may have more 1 answer
-each need be nested w/in 'label' element
-all related should have same 'name' attrib

<label><input type="checkbox" name="personality">Loving</label>

Make Default
-can set as default w/ 'checked' attrib inside input element

<input type="radio" name="test-name" checked>

Nest many Elements w/in single Div element
-division element
-general purpose container for other elements
-useful for passing CSS of its own class declar down to all elements w/in

CSS for Background Color  (background-color)

ID of an Element
-in add to classes, can have 'id' element
-should be unique (bp)

<h2 id="cat-photo-app">

-can be used to style w/ CSS

#cat-photo-element{
	background-color:green;
}

HTML Styling
-3 properties control space that surrounds HTML element

-padding- controls amt space b/t element & border
-margin- controls amt space b/t elements border and surrounding elements --negative values make element grow larger
-border-

*can customize elem. so w/ diff padding on each side
-padding-top, padding-right, padding-bottom, padding-left

*can do same thing w/ margins (margin-top, margin-right, margin-bottom, margin-left)

Use Clockwise Notation to specify padding
padding: 10px 20px 10px 20px;
*can do same thing w/ margins...

CSS Inheritance
-every HTML page has a 'body' element
-all your elements w/in body, will inherit 'body' element's styles
-if class, etc assigned to an element, it will override the 'body' style assigned
-can override classes w/ other classes... 'class= "pink-text blue-text"'
	-blue text will be the one applied
-can also override classes w/ ids(#)
-can override class declar w/ Inline styles
-can use '!important' to override all other styles (add to element in <Style> section)

HEX Codes for Colors (and other options...)
-uses 0-9 and A-F (uses 6 hexadecimal digits to rep colors; 2 each for R,G,B)
- 'background-color: #000000'
-can use abbrev HEX codes too
-can use RGB values
-written as rgb(255, 255, 255)

Using Responsive Design Boostrap Fluid Containers...